#!/usr/bin/env python

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this 
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

from __future__ import print_function
import sys
import argparse
from io import open

parser = argparse.ArgumentParser()
parser.add_argument('statuscodes', help='path/to/Opc.Ua.StatusCodes.csv')
parser.add_argument('outfile', help='outfile w/o extension')
args = parser.parse_args()

rows = []
with open(args.statuscodes, mode="rt") as f:
    lines = f.readlines()
    for l in lines:
        rows.append(tuple(l.strip().split(',')))

fh = open(args.outfile + ".inc", "wt", encoding='utf8')
def printh(string):
    print(string, end=u'\n', file=fh)

#########################
# Print the header file #
#########################

printh(u'''  (*---------------------------------------------------------
   * Autogenerated -- do not modify
   * Generated from 
   * %s 
   * with script
   * %s
   *-------------------------------------------------------*)

  (**
   * .. _statuscodes:
   *
   * StatusCodes
   * -----------
   * StatusCodes are extensively used in the OPC UA protocol and in the open62541
   * API. They are represented by the :ref:`statuscode` data type. The following
   * definitions are autogenerated from the ``Opc.Ua.StatusCodes.csv`` file provided
   * with the OPC UA standard. *)

  (* These StatusCodes are manually generated. *)
  UA_STATUSCODE_GOOD = $00;
  UA_STATUSCODE_INFOTYPE_DATAVALUE = $00000400;
  UA_STATUSCODE_INFOBITS_OVERFLOW = $00000080;
''' % (args.statuscodes, sys.argv[0]))

for row in rows:
    printh(u"  UA_STATUSCODE_%s = %s; (* %s *)" % (row[0].upper(), row[1].replace(u'0x',u'$'), row[2]))

fh.close()
